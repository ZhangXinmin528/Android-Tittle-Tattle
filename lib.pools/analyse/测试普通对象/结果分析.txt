测试一：使用对象池，未释放资源
条件：
1>对象类型：普通对象（非线程，非数据操作等）
2>对象个数：1000
3>对象池容量：5
4>测试机型：OPPO R15
5>释放资源：否

结果：
开始--70.6M;
峰值1：80.7M;
使用过程中：72.6M;
峰值2：83.6M;
结束：74.1M。

结果分析：从开始使用对象池到内存出现最大峰值，内存增加13M,执行完毕1000次之后，内存增加3.5M;

测试二：不使用对象池创建重复对象
条件：
1>对象类型：普通对象（非线程，非数据操作等）
2>对象个数：1000
3>对象池：未使用
4>测试机型：OPPO R15

结果：
开始：64.3M
峰值1：73.4M
使用过程中：66.3M
峰值2：70.3M
结束：65.3M

结果分析：从开始创建对象到内存出现最大峰值，内存增加9.1M,执行完毕1000次之后，内存增加2M;

对比测试一和测试二的结果，我们发现创建简单对象的话使用对象池反而会增加内存的开销，所以不建议使用；


测试三：使用对象池，结束释放资源
条件：
1>对象类型：普通对象（非线程，非数据操作等）
2>对象个数：1000
3>对象池容量：5
4>测试机型：OPPO R15
5>释放资源：是

结果：
开始--63.3M;
峰值1：75.4M;
使用过程中：66.6M;
峰值2：77.4M;
结束：67.3M。

结果分析：从开始使用对象池到内存出现最大峰值，内存增加14.1M,执行完毕1000次之后，内存增加4M;
