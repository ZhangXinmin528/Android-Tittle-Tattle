apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.coding.zxm.android_tittle_tattle"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0.0"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //当前模式
            buildConfigField 'boolean', 'IS_DEBUG', 'false'
            //是否输出日志
            buildConfigField("boolean", "LOG_ENABLE", "false")

        }
        debug {
            //当前模式
            buildConfigField 'boolean', 'IS_DEBUG', 'true'
            //是否输出日志
            buildConfigField("boolean", "LOG_ENABLE", "true")

        }
    }
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libwechatbacktrace.so'
        pickFirst 'lib/arm64-v8a/libwechatbacktrace.so'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation deps.material
    implementation deps.cardview

    debugImplementation deps.leakcanary_android

    implementation deps.arouter.api
    kapt deps.arouter.compiler

    //分包
    implementation deps.multidex

    //核心
    implementation project(':lib.core')
    //工具
    implementation project(':lib.util')
    //数据库
    implementation project(path: ':lib.database')
    //RxJava1
//    implementation project(':lib.rxjava1')
    //网络
    implementation project(':lib.net')
    //池技术
    implementation project(path: ':lib.pools')

    //轮询
    implementation project(path: ':lib.polling')
    //网络请求
    implementation project(path: ':lib.okhttp')
    //视频播放
    implementation project(path: ':lib.video')
    //xml解析
    implementation project(path: ':lib.xml')
    //列表控件
    implementation project(path: ':recyclerviewhelper')
    //队列
    implementation project(path: ':lib.queue')
    //卡片堆叠
    implementation project(path: ':lib.stacking')
    //爬虫
    implementation project(path: ':lib.jsoup')
    //列表效果演示
    implementation project(path: ':lib.list')
    //性能监控
    implementation project(path: ':lib.matrix')

    implementation project(path: ':lib.image')

    implementation project(path: ':lib.fragment')
}

//性能监控
apply plugin: 'com.tencent.matrix-plugin'
matrix {
    trace {
        enable = true    //if you don't want to use trace canary, set false
        baseMethodMapFile = "${project.buildDir}/matrix_output/Debug.methodmap"
        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
    }
}
