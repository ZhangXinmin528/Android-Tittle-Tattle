apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.coding.zxm.android_tittle_tattle"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //当前模式
            buildConfigField 'boolean', 'IS_DEBUG', 'false'
            //是否输出日志
            buildConfigField("boolean", "LOG_ENABLE", "false")

        }
        debug {
            //当前模式
            buildConfigField 'boolean', 'IS_DEBUG', 'true'
            //是否输出日志
            buildConfigField("boolean", "LOG_ENABLE", "true")

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.google.android.material:material:$rootProject.appcompatVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardviewVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    // Optional, if you use support library fragments:
//    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.leakcanaryVersion"

    //ARouter
    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    //分包
    implementation 'androidx.multidex:multidex:2.0.1'

    //核心
    implementation project(':lib.core')
    //工具
    implementation project(':lib.util')
    //RxJava1
    implementation project(':lib.rxjava1')
    //网络
    implementation project(':lib.net')

    //池技术
    implementation project(path: ':lib.pools')
    //轮询
    implementation project(path: ':lib.polling')
    //网络请求
    implementation project(path: ':lib.okhttp')
    //视频播放
    implementation project(path: ':lib.video')
    //xml解析
    implementation project(path: ':lib.xml')
    //列表控件
    implementation project(path: ':recyclerviewhelper')
    //队列
    implementation project(path: ':lib.queue')
    //卡片堆叠
    implementation project(path: ':lib.stacking')
    //数据库
    implementation project(path: ':lib.database')
    //爬虫
    implementation project(path: ':lib.jsoup')
    //列表效果演示
    implementation project(path: ':lib.list')
    //性能监控
    implementation project(path: ':lib.matrix')

    implementation project(path: ':lib.image')

    implementation project(path: ':lib.fragment')
}

//性能监控
apply plugin: 'com.tencent.matrix-plugin'
matrix {
    trace {
        enable = true    //if you don't want to use trace canary, set false
        baseMethodMapFile = "${project.buildDir}/matrix_output/Debug.methodmap"
        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
    }
}
